var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.11,1,1.795]],["body/classes/Address.html",[0,0.164,1,3.15,2,1.559,3,0.382,4,0.337,5,0.337,6,4.348,7,0.382,8,0.022,9,0.021,10,0.021]],["title/controllers/AddressController.html",[11,1.356,12,2.32]],["body/controllers/AddressController.html",[0,0.094,1,3.231,3,0.219,4,0.193,5,0.193,7,0.219,8,0.024,9,0.015,10,0.015,11,1.155,12,2.828,13,1.082,14,2.492,15,1.801,16,0.607,17,1.548,18,1.892,19,2.577,20,2.828,21,2.828,22,4.205,23,1.435,24,2.94,25,2.251,26,1.973,27,1.435,28,2.106,29,1.801,30,1.973,31,2.828,32,2.182,33,2.94,34,2.372,35,2.577,36,2.94,37,2.577,38,3.017,39,2.94,40,0.948,41,1.801,42,1.801,43,1.977,44,1.977,45,1.801,46,0.649,47,2.372,48,2.492,49,1.235,50,2.94,51,1.42,52,1.323,53,1.973,54,2.94,55,2.94,56,2.94,57,2.94]],["title/modules/AddressModule.html",[58,1.191,59,2.114]],["body/modules/AddressModule.html",[0,0.121,3,0.281,4,0.248,5,0.248,7,0.281,8,0.024,9,0.017,10,0.017,12,3.768,13,1.84,40,1.151,46,0.834,47,3.077,48,3.204,58,1.934,59,4.042,60,1.7,61,1.7,62,1.966,63,1.966,64,1.7,65,2.915,66,1.966,67,3.204,68,3.204,69,2.064,70,2.601,71,1.966,72,1.966,73,3.779,74,3.779,75,1.826]],["title/injectables/AddressService.html",[47,1.667,76,0.985]],["body/injectables/AddressService.html",[0,0.077,1,2.971,3,0.18,4,0.159,5,0.159,7,0.18,8,0.025,9,0.013,10,0.013,16,0.5,17,1.342,18,1.64,19,2.233,20,2.451,21,2.451,23,1.529,25,2.311,26,2.025,27,1.474,28,2.162,30,2.025,31,2.451,34,2.838,35,2.233,37,2.233,38,2.747,40,0.846,46,0.534,47,1.76,49,1.016,51,1.169,52,1.088,53,2.025,69,1.581,75,1.169,76,1.04,77,1.169,78,2.051,79,2.99,80,3.644,81,1.259,82,1.627,83,2.419,84,1.896,85,3.644,86,2.419,87,2.99,88,2.419,89,3.644,90,3.046,91,2.419,92,2.419,93,2.419,94,2.419,95,2.419,96,3.644,97,2.419,98,4.384,99,1.627,100,2.419,101,2.419]],["title/modules/AppModule.html",[58,1.191,102,2.32]],["body/modules/AppModule.html",[0,0.079,3,0.185,4,0.163,5,0.163,7,0.185,8,0.025,9,0.013,10,0.013,13,0.914,40,1.249,46,0.548,58,1.537,59,3.404,60,1.117,61,1.117,62,1.292,63,1.292,64,1.117,65,2.317,66,1.292,69,1.8,70,1.934,71,1.292,72,1.292,102,4.557,103,2.105,104,2.105,105,2.105,106,3.404,107,3.404,108,3.404,109,3.128,110,3.404,111,2.891,112,2.5,113,2.483,114,3.15,115,2.483,116,2.483,117,2.483,118,2.483,119,2.105,120,3.716,121,2.105,122,2.483,123,2.483,124,3.716,125,2.483,126,2.483,127,1.856,128,2.105,129,2.483,130,2.483,131,2.483,132,2.483,133,2.483,134,2.483,135,2.483,136,2.483,137,2.277,138,2.483,139,2.483]],["title/injectables/AppService.html",[76,0.985,110,2.114]],["body/injectables/AppService.html",[0,0.143,3,0.331,4,0.292,5,0.292,7,0.331,8,0.024,9,0.019,10,0.019,16,0.92,17,2.046,23,1.193,30,1.64,32,1.918,40,0.86,46,0.983,53,1.64,76,1.586,77,2.152,110,3.405,140,3.776,141,6.341,142,4.454,143,4.454,144,4.454]],["title/classes/Auth.html",[0,0.11,145,2.32]],["body/classes/Auth.html",[0,0.164,2,1.559,3,0.382,4,0.337,5,0.337,7,0.382,8,0.022,9,0.021,10,0.021,145,4.071,146,4.348]],["title/controllers/AuthController.html",[11,1.356,147,2.32]],["body/controllers/AuthController.html",[0,0.101,3,0.234,4,0.207,5,0.207,7,0.379,8,0.025,9,0.015,10,0.015,11,1.237,13,1.159,15,1.929,16,0.65,17,1.625,23,1.182,25,1.854,26,1.625,27,0.843,28,1.734,30,1.625,40,1.066,41,1.929,42,1.929,46,0.974,51,1.52,53,1.625,111,2.652,137,1.929,145,2.117,147,2.968,148,2.352,149,4.413,150,3.741,151,3.147,152,3.299,153,3.147,154,3.147,155,4.413,156,3.147,157,5.096,158,3.147,159,3.147,160,5.096,161,3.147,162,3.147,163,2.668,164,3.147,165,1.929,166,2.668,167,2.668,168,2.668,169,2.968,170,1.929,171,2.117,172,2.968,173,2.352,174,3.147,175,3.147,176,3.147,177,3.147,178,3.147,179,3.147,180,3.147,181,3.147,182,3.147,183,3.147,184,3.147]],["title/guards/AuthGuard.html",[165,2.114,185,2.579]],["body/guards/AuthGuard.html",[0,0.074,3,0.173,4,0.153,5,0.153,7,0.173,8,0.025,9,0.012,10,0.012,16,0.48,17,1.302,23,1.147,25,1.798,26,1.576,27,1.378,28,1.682,30,1.302,32,1.221,40,1.046,46,0.513,53,1.576,76,1.01,81,1.841,137,2.168,163,4.776,165,2.168,169,3.461,170,1.425,171,2.379,186,2.326,187,1.972,188,2.41,189,4.783,190,3.846,191,3.538,192,2.326,193,4.594,194,5.633,195,2.326,196,3.538,197,4.783,198,2.326,199,2.326,200,2.379,201,3.538,202,2.326,203,4.281,204,3.629,205,1.565,206,1.972,207,1.739,208,1.565,209,1.972,210,1.972,211,1.972,212,2.326,213,2.326,214,2.326,215,2.326,216,2.326,217,2.326,218,4.783,219,2.326,220,2.999,221,2.168,222,2.326,223,3.629,224,1.739,225,2.326,226,1.739,227,1.972,228,2.326,229,2.326,230,1.972,231,2.326,232,2.326,233,2.326,234,2.326,235,2.326,236,2.326,237,2.326,238,2.326]],["title/modules/AuthModule.html",[58,1.191,106,2.114]],["body/modules/AuthModule.html",[0,0.082,3,0.191,4,0.168,5,0.168,7,0.338,8,0.025,9,0.013,10,0.013,13,1.402,40,1.232,46,0.841,49,1.078,58,1.568,60,1.154,61,1.154,62,1.335,63,1.335,64,1.154,65,2.363,66,2.363,69,1.822,70,1.982,71,1.335,72,1.335,84,1.335,106,3.953,109,3.166,111,3.322,112,2.53,114,3.228,119,2.175,127,1.918,128,2.175,137,2.334,147,3.054,165,2.334,166,2.175,167,2.175,168,2.175,169,2.561,170,1.572,171,1.726,172,1.726,173,1.918,205,1.726,207,1.918,208,1.726,209,2.175,210,2.175,226,1.918,227,2.175,239,2.175,240,2.566,241,2.566,242,2.175,243,2.566,244,2.566,245,3.808,246,2.566,247,2.566,248,2.566,249,2.566,250,2.566,251,2.566,252,2.566]],["title/injectables/AuthService.html",[76,0.985,111,1.795]],["body/injectables/AuthService.html",[0,0.099,3,0.231,4,0.204,5,0.204,7,0.231,8,0.024,9,0.015,10,0.015,16,0.641,17,1.608,23,1.17,25,1.835,26,1.608,27,1.17,28,1.716,30,1.142,32,2.072,40,0.976,46,0.685,52,1.965,53,1.142,76,1.247,77,1.498,81,2.273,111,2.273,112,2.7,127,2.318,150,4.286,169,2.938,188,2.847,190,3.265,193,5.228,200,2.938,204,3.703,205,2.086,220,2.629,221,1.9,223,2.629,224,3.265,253,2.629,254,3.101,255,3.101,256,3.101,257,5.488,258,3.101,259,3.401,260,2.629,261,3.101,262,3.101,263,3.101,264,3.101,265,3.101,266,3.101,267,3.101]],["title/classes/CreateAddressDto.html",[0,0.11,29,2.114]],["body/classes/CreateAddressDto.html",[0,0.118,1,2.877,2,1.119,3,0.274,4,0.242,5,0.242,7,0.274,8,0.023,9,0.017,10,0.017,16,0.76,23,1.694,27,1.694,29,3.01,32,2.352,268,5.472,269,2.751,270,2.556,271,5.529,272,5.529,273,5.529,274,5.529,275,5.529,276,3.68,277,3.68,278,3.68,279,3.68,280,3.68,281,3.68]],["title/classes/CreateAuthDto.html",[0,0.11,282,2.32]],["body/classes/CreateAuthDto.html",[0,0.163,2,1.55,3,0.379,4,0.335,5,0.335,7,0.379,8,0.022,9,0.021,10,0.021,282,4.057,283,4.322,284,3.811]],["title/classes/CreatePermissionDto.html",[0,0.11,285,2.114]],["body/classes/CreatePermissionDto.html",[0,0.143,2,1.354,3,0.331,4,0.292,5,0.292,7,0.331,8,0.023,9,0.019,10,0.019,16,0.92,23,1.489,26,2.23,27,1.489,32,1.918,90,2.684,270,2.891,285,3.405,286,5.134,287,3.33,288,4.073,289,4.454,290,3.776]],["title/classes/CreateSellerDto.html",[0,0.11,291,1.942]],["body/classes/CreateSellerDto.html",[0,0.163,2,1.55,3,0.379,4,0.335,5,0.335,7,0.379,8,0.022,9,0.021,10,0.021,291,3.396,292,4.322,293,3.811]],["title/classes/CreateUserDto.html",[0,0.11,294,2.32]],["body/classes/CreateUserDto.html",[0,0.104,2,0.99,3,0.242,4,0.214,5,0.214,7,0.242,8,0.023,9,0.016,10,0.016,16,0.673,23,1.734,27,1.734,32,2.305,90,2.708,99,3.491,259,3.491,270,2.352,288,3.491,294,3.039,295,5.555,296,2.434,297,4.4,298,4.4,299,4.4,300,4.4,301,4.4,302,5.19,303,2.76,304,2.76,305,2.76,306,3.256,307,2.76,308,2.76,309,2.76,310,2.76,311,4.519,312,2.76]],["title/classes/Permission.html",[0,0.11,313,2.579]],["body/classes/Permission.html",[0,0.164,2,1.559,3,0.382,4,0.337,5,0.337,7,0.382,8,0.022,9,0.021,10,0.021,313,4.524,314,4.348]],["title/controllers/PermissionsController.html",[11,1.356,315,2.32]],["body/controllers/PermissionsController.html",[0,0.082,3,0.19,4,0.167,5,0.167,7,0.19,8,0.025,9,0.013,10,0.013,11,1.002,13,0.939,15,1.563,16,0.527,17,1.396,18,1.706,19,2.323,20,2.55,21,3.043,23,1.434,25,2.105,26,1.844,27,1.342,28,1.969,30,1.971,31,1.715,32,2.105,34,2.71,35,1.563,37,1.563,40,0.967,41,2.773,42,2.323,43,1.715,44,1.715,45,1.563,46,0.563,51,1.232,52,1.147,53,1.971,79,3.07,152,4.002,285,3.438,315,2.55,316,2.162,317,2.162,318,2.162,319,2.55,320,2.55,321,2.834,322,2.55,323,2.834,324,2.55,325,3.658,326,3.214,327,2.55,328,2.548,329,2.162,330,1.715,331,3.214,332,1.715,333,2.55,334,2.162,335,2.55,336,2.55,337,2.162,338,2.55,339,2.162,340,2.55,341,2.162,342,2.55]],["title/modules/PermissionsModule.html",[58,1.191,107,2.114]],["body/modules/PermissionsModule.html",[0,0.121,3,0.281,4,0.248,5,0.248,7,0.281,8,0.024,9,0.017,10,0.017,13,1.84,40,1.151,46,0.834,58,1.934,60,1.7,61,1.7,62,1.966,63,1.966,64,1.7,65,2.915,66,1.966,69,2.064,70,2.601,71,1.966,72,1.966,75,1.826,107,4.042,315,3.768,328,3.587,329,3.204,343,3.204,344,3.204,345,3.779,346,3.779]],["title/injectables/PermissionsService.html",[76,0.985,328,1.942]],["body/injectables/PermissionsService.html",[0,0.08,3,0.187,4,0.165,5,0.165,7,0.187,8,0.025,9,0.013,10,0.013,16,0.519,17,1.38,18,1.687,19,2.297,20,2.522,21,2.522,23,1.495,25,2.235,26,1.959,27,1.425,28,2.091,30,1.959,31,2.522,34,2.696,35,2.297,37,2.297,40,1.027,46,0.555,49,1.055,51,1.214,52,1.13,53,1.959,69,1.611,75,1.214,76,1.07,77,1.214,79,3.047,81,1.307,82,1.69,84,2.334,87,2.297,90,2.934,285,3.419,288,3.016,317,2.13,318,3.178,325,3.642,328,2.111,330,1.69,331,3.178,332,1.69,347,2.13,348,2.512,349,2.512,350,2.512,351,2.512,352,2.512,353,2.512,354,2.512,355,2.512,356,2.512,357,2.512,358,2.512]],["title/injectables/PrismaService.html",[69,1.118,76,0.985]],["body/injectables/PrismaService.html",[0,0.134,3,0.312,4,0.275,5,0.275,7,0.312,8,0.024,9,0.019,10,0.019,16,0.865,17,1.968,23,1.123,30,1.543,40,1.032,46,0.925,49,1.76,69,1.732,76,1.526,77,2.024,188,3.315,211,3.552,224,3.132,359,3.552,360,3.596,361,4.991,362,6.551,363,4.19,364,4.19]],["title/classes/Seller.html",[0,0.11,365,1.942]],["body/classes/Seller.html",[0,0.164,2,1.559,3,0.382,4,0.337,5,0.337,7,0.382,8,0.022,9,0.021,10,0.021,365,3.408,366,4.348]],["title/controllers/SellersController.html",[11,1.356,367,2.32]],["body/controllers/SellersController.html",[0,0.091,3,0.212,4,0.187,5,0.187,7,0.212,8,0.025,9,0.014,10,0.014,11,1.12,13,1.049,15,1.747,32,1.934,34,2.706,40,1.081,41,2.52,42,2.957,43,1.917,44,1.917,45,1.747,46,0.629,49,1.198,51,1.377,52,1.283,53,2.215,79,1.747,291,1.605,321,3.074,323,2.131,326,3.487,330,1.917,332,1.917,334,2.417,337,2.417,341,2.417,365,1.605,367,2.766,368,2.417,369,3.607,370,2.331,371,2.417,372,3.074,373,3.687,374,2.851,375,2.417,376,2.851,377,2.851,378,2.851,379,2.851,380,2.851,381,2.851,382,2.851,383,2.851,384,2.851]],["title/modules/SellersModule.html",[58,1.191,108,2.114]],["body/modules/SellersModule.html",[0,0.121,3,0.281,4,0.248,5,0.248,7,0.281,8,0.024,9,0.017,10,0.017,13,1.84,40,1.151,46,0.834,58,1.934,60,1.7,61,1.7,62,1.966,63,1.966,64,1.7,65,2.915,66,1.966,69,2.064,70,2.601,71,1.966,72,1.966,75,1.826,108,4.042,367,3.768,370,3.077,371,3.204,385,3.204,386,3.204,387,3.779,388,3.779]],["title/injectables/SellersService.html",[76,0.985,370,1.667]],["body/injectables/SellersService.html",[0,0.067,3,0.156,4,0.138,5,0.138,7,0.156,8,0.025,9,0.011,10,0.011,16,0.433,17,1.202,18,1.469,23,1.392,25,2.184,26,1.914,27,1.392,28,2.043,30,1.807,34,2.848,35,1.284,37,1.284,40,0.947,46,0.463,49,0.881,51,1.012,52,0.943,53,2.066,69,1.467,75,1.012,76,0.932,77,1.012,79,1.284,81,1.091,82,1.41,84,1.699,87,2.458,90,3.022,99,2.698,188,2.258,291,1.18,330,1.41,332,1.41,365,2.926,369,4.057,370,1.577,372,2.44,373,2.775,389,1.777,390,3.265,391,3.265,392,3.265,393,3.265,394,2.096,395,3.265,396,2.096,397,3.265,398,2.096,399,3.265,400,2.096,401,3.265,402,2.096,403,3.265,404,2.096,405,2.096,406,2.096,407,2.096,408,2.096,409,4.01,410,2.096,411,3.265,412,3.265]],["title/classes/UpdateAddressDto.html",[0,0.11,38,1.942]],["body/classes/UpdateAddressDto.html",[0,0.149,2,1.414,3,0.346,4,0.305,5,0.305,7,0.346,8,0.024,9,0.02,10,0.02,18,2.092,29,2.85,38,3.213,40,1.101,269,3.476,360,3.838,413,3.942,414,5.706,415,3.476,416,3.128,417,3.128,418,4.65]],["title/classes/UpdateAuthDto.html",[0,0.11,419,2.579]],["body/classes/UpdateAuthDto.html",[0,0.149,2,1.414,3,0.346,4,0.305,5,0.305,7,0.346,8,0.024,9,0.02,10,0.02,18,2.092,40,1.101,282,3.128,284,3.476,360,3.838,415,3.476,416,3.128,417,3.128,419,4.265,420,3.942,421,5.706,422,4.65]],["title/classes/UpdatePermissionDto.html",[0,0.11,325,2.114]],["body/classes/UpdatePermissionDto.html",[0,0.151,2,1.43,3,0.35,4,0.309,5,0.309,7,0.35,8,0.023,9,0.02,10,0.02,16,0.971,23,1.26,26,2.284,27,1.26,32,1.983,270,2.99,287,3.515,290,3.986,325,3.521,423,4.87]],["title/classes/UpdateSellerDto.html",[0,0.11,373,2.114]],["body/classes/UpdateSellerDto.html",[0,0.149,2,1.414,3,0.346,4,0.305,5,0.305,7,0.346,8,0.024,9,0.02,10,0.02,18,2.092,40,1.101,291,2.618,293,3.476,360,3.838,372,3.476,373,3.497,415,3.476,416,3.128,417,3.128,424,3.942,425,5.706]],["title/classes/UpdateUserDto.html",[0,0.11,426,2.32]],["body/classes/UpdateUserDto.html",[0,0.1,2,0.946,3,0.232,4,0.204,5,0.204,7,0.232,8,0.023,9,0.015,10,0.015,16,0.643,23,1.688,27,1.688,28,2.672,32,2.287,45,1.907,90,2.115,259,3.407,270,2.279,288,3.407,296,2.327,297,4.295,298,4.295,299,4.295,300,4.295,301,4.295,303,2.639,304,2.639,305,2.639,307,2.639,308,2.639,309,2.639,310,2.639,312,2.639,426,2.945,427,5.431,428,4.295,429,3.712,430,3.112,431,3.112,432,3.112,433,3.112]],["title/controllers/UsersController.html",[11,1.356,434,2.32]],["body/controllers/UsersController.html",[0,0.04,1,1.715,3,0.092,4,0.081,5,0.081,7,0.092,8,0.024,9,0.007,10,0.007,11,0.487,13,0.456,15,0.759,16,0.256,17,0.781,23,1.431,25,2.194,26,1.923,27,1.399,28,2.053,30,1.967,34,2.91,38,1.855,40,0.78,41,1.704,42,2.476,43,0.833,44,0.833,45,0.759,46,0.273,47,1.344,49,0.52,52,1.251,53,1.967,81,0.644,87,0.759,90,3.19,112,1.251,152,3.994,188,3.687,190,2.079,200,4.17,294,1.871,321,1.585,323,1.585,339,3.425,365,2.432,369,3.229,370,1.344,375,1.05,426,2.216,434,1.426,435,1.05,436,3.141,437,2.781,438,2.358,439,2.121,440,1.798,441,2.781,442,2.793,443,2.121,444,2.121,445,2.781,446,1.798,447,2.781,448,2.358,449,2.781,450,1.238,451,2.121,452,1.238,453,1.238,454,1.238,455,1.238,456,2.121,457,1.238,458,1.05,459,1.238,460,1.238,461,4.759,462,2.121,463,1.238,464,1.238,465,1.238,466,2.121,467,1.238,468,1.238,469,2.121,470,1.238,471,1.238,472,2.121,473,1.238,474,1.05,475,1.238,476,1.238,477,2.121,478,1.238,479,1.05,480,2.358,481,2.121,482,1.238,483,1.238,484,2.121,485,1.238,486,1.238,487,1.05,488,1.05,489,1.238,490,1.238,491,1.05,492,1.238,493,1.238,494,1.238,495,1.238,496,1.238,497,1.238,498,1.238,499,1.238,500,1.238,501,1.238,502,2.781,503,1.238,504,1.238,505,1.238,506,1.238,507,1.238,508,1.238,509,1.238,510,1.238]],["title/modules/UsersModule.html",[58,1.191,109,1.942]],["body/modules/UsersModule.html",[0,0.109,3,0.253,4,0.223,5,0.223,7,0.253,8,0.024,9,0.016,10,0.016,13,1.714,40,1.192,46,0.75,47,2.889,58,1.833,60,1.53,61,1.53,62,1.769,63,1.769,64,1.53,65,2.763,66,1.769,69,1.938,70,2.423,71,1.769,72,1.769,75,1.642,109,3.787,112,2.779,370,2.984,434,3.571,487,2.882,488,2.882,491,2.882,511,3.4,512,3.4,513,3.4,514,3.4,515,3.4]],["title/injectables/UsersService.html",[76,0.985,112,1.552]],["body/injectables/UsersService.html",[0,0.069,3,0.16,4,0.141,5,0.141,7,0.16,8,0.025,9,0.012,10,0.012,16,0.445,17,1.228,19,2.044,23,1.469,25,2.208,26,1.935,27,1.517,28,2.066,30,1.935,32,1.409,34,2.539,40,0.788,46,0.476,49,0.905,51,1.041,52,0.969,53,1.935,69,1.489,75,1.041,76,0.952,77,1.041,81,1.121,82,1.449,84,2.124,87,3.471,90,2.809,99,2.745,112,1.501,188,3.663,200,4.13,221,1.32,259,3.091,428,1.827,429,1.827,436,2.828,438,3.46,440,2.828,442,3.896,446,2.828,448,2.828,458,2.828,474,2.828,479,2.828,480,3.46,516,1.827,517,2.154,518,2.154,519,3.336,520,2.154,521,2.154,522,3.336,523,2.154,524,2.154,525,2.154,526,2.154,527,2.154,528,2.154,529,2.154,530,2.154,531,2.154,532,3.336]],["title/coverage.html",[533,3.986]],["body/coverage.html",[0,0.203,1,1.166,5,0.147,6,1.899,8,0.024,9,0.012,10,0.012,11,1.988,12,1.507,14,1.899,27,0.6,29,1.373,38,1.261,47,1.082,64,1.008,69,0.726,76,1.587,78,1.899,84,1.166,110,1.373,111,1.166,112,1.008,140,1.899,145,1.507,146,1.899,147,1.507,148,3.126,165,1.373,170,1.373,172,1.507,185,1.674,187,1.899,208,1.507,221,1.373,253,1.899,268,1.899,269,2.569,282,1.507,283,1.899,284,2.569,285,1.373,286,1.899,287,2.569,291,1.261,292,1.899,293,2.569,294,1.507,295,1.899,296,2.569,313,1.674,314,1.899,315,1.507,316,1.899,325,1.373,328,1.261,347,1.899,359,1.899,365,1.261,366,1.899,367,1.507,368,1.899,370,1.082,373,1.373,389,1.899,413,1.899,419,1.674,420,1.899,423,1.899,424,1.899,426,1.507,427,1.899,434,1.507,435,1.899,516,1.899,533,1.899,534,2.24,535,2.24,536,2.24,537,1.899,538,5.059,539,1.899,540,6.916,541,6.504,542,4.182,543,4.182,544,2.24,545,1.899,546,1.899,547,3.437,548,2.24,549,3.437,550,4.182,551,2.24,552,2.569,553,1.899,554,2.24,555,2.24,556,2.24,557,2.24,558,2.24]],["title/dependencies.html",[61,1.866,559,2.445]],["body/dependencies.html",[8,0.024,9,0.019,10,0.019,46,0.983,49,1.871,61,2.004,121,3.776,205,2.996,206,3.776,207,3.33,416,2.996,417,2.996,560,6.056,561,4.454,562,4.454,563,4.454,564,4.454,565,4.454,566,4.454,567,4.454,568,4.454,569,4.454,570,4.454,571,4.454,572,4.454]],["title/miscellaneous/enumerations.html",[573,1.624,574,3.516]],["body/miscellaneous/enumerations.html",[8,0.023,9,0.021,10,0.021,16,1.028,260,5.041,573,2.803,574,4.22,575,5.946,576,4.978,577,4.978,578,5.946,579,5.041]],["title/miscellaneous/functions.html",[573,1.624,580,3.516]],["body/miscellaneous/functions.html",[8,0.021,9,0.021,10,0.021,16,1.04,64,2.876,546,4.27,552,3.765,553,5.418,573,2.836,580,4.27,581,5.037,582,4.27]],["title/index.html",[16,0.596,583,2.884,584,2.884]],["body/index.html",[8,0.022,9,0.022,10,0.022,585,5.39,586,5.39]],["title/modules.html",[60,2.116]],["body/modules.html",[8,0.02,9,0.02,10,0.02,59,2.788,60,2.047,102,3.061,106,2.788,107,2.788,108,2.788,109,2.562,587,6.689,588,6.689,589,6.689,590,6.689]],["title/overview.html",[591,3.986]],["body/overview.html",[2,0.825,8,0.024,9,0.014,10,0.014,13,0.999,47,2.494,58,0.937,59,3.632,60,1.221,61,1.221,62,1.412,63,1.412,64,1.221,65,1.412,66,1.412,67,2.3,68,2.3,69,1.968,70,2.065,71,1.412,72,1.412,77,1.311,102,4.572,103,2.3,104,2.3,105,2.3,106,3.957,107,3.632,108,3.632,109,3.635,110,2.875,111,3.162,112,2.471,185,2.028,239,2.3,242,2.3,328,2.642,343,2.3,344,2.3,370,2.494,385,2.3,386,2.3,591,2.3,592,2.714,593,2.714,594,2.714,595,2.714,596,2.714]],["title/properties.html",[270,2.158,559,2.445]],["body/properties.html",[8,0.024,9,0.021,10,0.021,270,2.653,597,5.098,598,5.098,599,5.098,600,5.098,601,5.098,602,5.098]],["title/miscellaneous/variables.html",[573,1.624,603,3.516]],["body/miscellaneous/variables.html",[4,0.249,8,0.024,9,0.017,10,0.017,16,0.784,18,1.708,27,1.504,32,1.731,84,2.609,137,2.326,148,2.837,170,3.072,171,2.553,172,3.372,173,2.837,208,3.372,221,2.326,226,3.748,230,3.218,361,3.218,537,3.218,539,4.251,545,3.218,552,2.837,573,2.137,579,5.407,582,3.218,603,3.218,604,5.014,605,3.796,606,3.796,607,6.209,608,3.796,609,3.796,610,3.796,611,3.796,612,3.796,613,3.796,614,3.796,615,3.796]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":598,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":596,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":595,"title":{},"body":{"overview.html":{}}}],["3.3.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":593,"title":{},"body":{"overview.html":{}}}],["6",{"_index":592,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["60000000s",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":594,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["address.controller",{"_index":74,"title":{},"body":{"modules/AddressModule.html":{}}}],["address.dto",{"_index":418,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["address.dto.ts",{"_index":269,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["address.dto.ts:2",{"_index":276,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:3",{"_index":277,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:4",{"_index":278,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:5",{"_index":281,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:6",{"_index":279,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:7",{"_index":280,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.service",{"_index":48,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{}}}],["address/address.service",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["address2",{"_index":271,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["addresscontroller",{"_index":12,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addressmodule",{"_index":59,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addressservice",{"_index":47,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["admin",{"_index":578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["app.controller",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":110,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":145,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["auth.dto",{"_index":422,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":284,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.guard",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":147,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":165,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":106,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":602,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["backend",{"_index":586,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":42,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bootstrap",{"_index":64,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":590,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":587,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["city",{"_index":272,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["civility",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/Auth.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"classes/Seller.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/Auth.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"classes/Seller.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_addressmodule",{"_index":67,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":68,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_permissionsmodule",{"_index":343,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":344,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_sellersmodule",{"_index":385,"title":{},"body":{"modules/SellersModule.html":{},"overview.html":{}}}],["cluster_sellersmodule_providers",{"_index":386,"title":{},"body":{"modules/SellersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":511,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":512,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complex",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["config.yaml",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../configuration.ts",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["config/configuration.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/database.config",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('signindto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('username",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["constant",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"injectables/AddressService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(jwtservice",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(prisma",{"_index":82,"title":{},"body":{"injectables/AddressService.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":11,"title":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('address",{"_index":50,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('auth",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('permissions",{"_index":333,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('sellers",{"_index":374,"title":{},"body":{"controllers/SellersController.html":{}}}],["controller('users",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":13,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["country",{"_index":273,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["coverage",{"_index":533,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":18,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":334,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{}}}],["create(createaddressdto",{"_index":22,"title":{},"body":{"controllers/AddressController.html":{}}}],["create(createpermissiondto",{"_index":318,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(data",{"_index":85,"title":{},"body":{"injectables/AddressService.html":{}}}],["create(seller",{"_index":395,"title":{},"body":{"injectables/SellersService.html":{}}}],["createaddressdto",{"_index":29,"title":{"classes/CreateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["createauthdto",{"_index":282,"title":{"classes/CreateAuthDto.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createpermissiondto",{"_index":285,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"coverage.html":{}}}],["createseller",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["createseller(id",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["createsellerdto",{"_index":291,"title":{"classes/CreateSellerDto.html":{}},"body":{"classes/CreateSellerDto.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["createuser",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(undefined",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":294,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["data",{"_index":87,"title":{},"body":{"injectables/AddressService.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":429,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":63,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":45,"title":{},"body":{"controllers/AddressController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":323,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id/address/:idaddress",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id/sellers",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted_at",{"_index":428,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["deletesellerbyuserid",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletesellerbyuserid(@param('id",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletesellerbyuserid(id",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuseraddress",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuseraddress(id",{"_index":460,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":599,"title":{},"body":{"properties.html":{}}}],["documentation",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":330,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["dto/update",{"_index":332,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["enumerations",{"_index":574,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.development",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":7,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{}}}],["extracttokenfromheader",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":79,"title":{},"body":{"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["findallbyuserid",{"_index":80,"title":{},"body":{"injectables/AddressService.html":{}}}],["findallbyuserid(id",{"_index":89,"title":{},"body":{"injectables/AddressService.html":{}}}],["findone",{"_index":19,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":337,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{}}}],["findone(id",{"_index":31,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["findone(username",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidseller",{"_index":390,"title":{},"body":{"injectables/SellersService.html":{}}}],["findonebyidseller(id",{"_index":397,"title":{},"body":{"injectables/SellersService.html":{}}}],["findonebyiduser",{"_index":391,"title":{},"body":{"injectables/SellersService.html":{}}}],["findonebyiduser(@param('id",{"_index":378,"title":{},"body":{"controllers/SellersController.html":{}}}],["findonebyiduser(id",{"_index":399,"title":{},"body":{"injectables/SellersService.html":{}}}],["first_name",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["function",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":580,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":321,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["get(':id/address",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id/address/:idaddress",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id/sellers",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["getallusers",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["gethello",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["getsellerbyuserid",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsellerbyuserid(@param('id",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsellerbyuserid(id",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":583,"title":{"index.html":{}},"body":{}}],["getuseraddress",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseraddress(@param('id",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseraddress(id",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseraddressbyid",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseraddressbyid(id",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["global",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard",{"_index":185,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlers",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hello",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httpcode",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":34,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id_address",{"_index":98,"title":{},"body":{"injectables/AddressService.html":{}}}],["id_permission",{"_index":288,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/PermissionsService.html":{},"classes/UpdateUserDto.html":{}}}],["id_seller",{"_index":409,"title":{},"body":{"injectables/SellersService.html":{}}}],["id_user",{"_index":99,"title":{},"body":{"injectables/AddressService.html":{},"classes/CreateUserDto.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{}}}],["idaddress",{"_index":461,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["instead",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["is_public_key",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["js",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["jwtconstants",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["keep",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last_name",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["legend",{"_index":62,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":600,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["load",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["loomeria",{"_index":585,"title":{},"body":{"index.html":{}}}],["mail",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["main",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":10,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":17,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":58,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/address/address.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/permissions/permissions.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/prisma/prisma.service",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/sellers/sellers.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/users/users.service",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["name",{"_index":26,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"classes/UpdatePermissionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nestjs/common",{"_index":46,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":416,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node:path",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["number",{"_index":90,"title":{},"body":{"injectables/AddressService.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["optionnel",{"_index":430,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["out",{"_index":72,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outside",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":591,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":559,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":44,"title":{},"body":{"controllers/AddressController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":339,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["param('idaddress",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":415,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{}}}],["partialtype(createaddressdto",{"_index":414,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(createauthdto",{"_index":421,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createsellerdto",{"_index":425,"title":{},"body":{"classes/UpdateSellerDto.html":{}}}],["pass",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["patch",{"_index":43,"title":{},"body":{"controllers/AddressController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":326,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{}}}],["patch(':id/address/:idaddress",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/sellers",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["permission",{"_index":313,"title":{"classes/Permission.html":{}},"body":{"classes/Permission.html":{},"coverage.html":{}}}],["permission.dto",{"_index":331,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["permission.dto.ts",{"_index":287,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:2",{"_index":290,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts:3",{"_index":289,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permissions",{"_index":317,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["permissions.controller",{"_index":346,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":329,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissionscontroller",{"_index":315,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":107,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":328,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":274,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["post",{"_index":41,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["post(':id/sellers",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["pour",{"_index":431,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["prefix",{"_index":15,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":84,"title":{},"body":{"injectables/AddressService.html":{},"modules/AuthModule.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":49,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"modules/AuthModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":75,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":69,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice,addressservice",{"_index":515,"title":{},"body":{"modules/UsersModule.html":{}}}],["private",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["promise",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":270,"title":{"properties.html":{}},"body":{"classes/CreateAddressDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"properties.html":{}}}],["provide",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@post('login",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["remove",{"_index":20,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["remove(@param('id",{"_index":341,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/SellersController.html":{}}}],["remove(id",{"_index":35,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{}}}],["removebyiduser",{"_index":392,"title":{},"body":{"injectables/SellersService.html":{}}}],["removebyiduser(id",{"_index":401,"title":{},"body":{"injectables/SellersService.html":{}}}],["req",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":71,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":9,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":53,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":30,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["route",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rxjs",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["seller",{"_index":365,"title":{"classes/Seller.html":{}},"body":{"classes/Seller.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["seller.dto",{"_index":372,"title":{},"body":{"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/UpdateSellerDto.html":{}}}],["seller.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateSellerDto.html":{},"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["sellers",{"_index":369,"title":{},"body":{"controllers/SellersController.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{}}}],["sellers.controller",{"_index":388,"title":{},"body":{"modules/SellersModule.html":{}}}],["sellers.service",{"_index":371,"title":{},"body":{"controllers/SellersController.html":{},"modules/SellersModule.html":{}}}],["sellers/sellers.service",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["sellerscontroller",{"_index":367,"title":{"controllers/SellersController.html":{}},"body":{"controllers/SellersController.html":{},"modules/SellersModule.html":{},"coverage.html":{}}}],["sellersmodule",{"_index":108,"title":{"modules/SellersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SellersModule.html":{},"modules.html":{},"overview.html":{}}}],["sellersservice",{"_index":370,"title":{"injectables/SellersService.html":{}},"body":{"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["setmetadata(is_public_key",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["signin",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.password",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["soft",{"_index":433,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateSellerDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/Seller.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.controller.ts",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../seed.ts",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":142,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:16",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:22",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:50",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constant.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/create",{"_index":283,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":420,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":146,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/address/address.controller.ts",{"_index":14,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/modules/address/address.controller.ts:17",{"_index":24,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/modules/address/address.controller.ts:21",{"_index":33,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/modules/address/address.controller.ts:25",{"_index":39,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/modules/address/address.controller.ts:29",{"_index":36,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/modules/address/address.module.ts",{"_index":73,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/modules/address/address.service.ts",{"_index":78,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/modules/address/address.service.ts:15",{"_index":88,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:19",{"_index":92,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:25",{"_index":91,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:31",{"_index":94,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:38",{"_index":93,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:6",{"_index":83,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/address.service.ts:9",{"_index":86,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/modules/address/dto/create",{"_index":268,"title":{},"body":{"classes/CreateAddressDto.html":{},"coverage.html":{}}}],["src/modules/address/dto/update",{"_index":413,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/modules/address/entities/address.entity.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["src/modules/permissions/dto/create",{"_index":286,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permissions/dto/update",{"_index":423,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permissions/entities/permission.entity.ts",{"_index":314,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{}}}],["src/modules/permissions/permissions.controller.ts",{"_index":316,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/modules/permissions/permissions.controller.ts:19",{"_index":319,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/modules/permissions/permissions.controller.ts:24",{"_index":320,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/modules/permissions/permissions.controller.ts:29",{"_index":322,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/modules/permissions/permissions.controller.ts:34",{"_index":327,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/modules/permissions/permissions.controller.ts:42",{"_index":324,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/modules/permissions/permissions.module.ts",{"_index":345,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/modules/permissions/permissions.service.ts",{"_index":347,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/modules/permissions/permissions.service.ts:11",{"_index":349,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/permissions/permissions.service.ts:17",{"_index":350,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/permissions/permissions.service.ts:21",{"_index":351,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/permissions/permissions.service.ts:25",{"_index":353,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/permissions/permissions.service.ts:32",{"_index":352,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/permissions/permissions.service.ts:8",{"_index":348,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/modules/prisma/prisma.service.ts",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/modules/prisma/prisma.service.ts:6",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/modules/prisma/seed.ts",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/sellers/dto/create",{"_index":292,"title":{},"body":{"classes/CreateSellerDto.html":{},"coverage.html":{}}}],["src/modules/sellers/dto/update",{"_index":424,"title":{},"body":{"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["src/modules/sellers/entities/seller.entity.ts",{"_index":366,"title":{},"body":{"classes/Seller.html":{},"coverage.html":{}}}],["src/modules/sellers/sellers.controller.ts",{"_index":368,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{}}}],["src/modules/sellers/sellers.module.ts",{"_index":387,"title":{},"body":{"modules/SellersModule.html":{}}}],["src/modules/sellers/sellers.service.ts",{"_index":389,"title":{},"body":{"injectables/SellersService.html":{},"coverage.html":{}}}],["src/modules/sellers/sellers.service.ts:11",{"_index":396,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/sellers/sellers.service.ts:21",{"_index":398,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/sellers/sellers.service.ts:29",{"_index":400,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/sellers/sellers.service.ts:37",{"_index":404,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/sellers/sellers.service.ts:47",{"_index":402,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/sellers/sellers.service.ts:8",{"_index":394,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/modules/users/dto/create",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":427,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:100",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:108",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:26",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:34",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:52",{"_index":459,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:57",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:62",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:70",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:79",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:87",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:95",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":513,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:19",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:25",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:31",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:35",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:42",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:6",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:9",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/role/role.enum.ts",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":584,"title":{"index.html":{}},"body":{}}],["statements",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":32,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"controllers/SellersController.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":588,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":589,"title":{},"body":{"modules.html":{}}}],["table",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["this.$connect",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.addressservice.create(createaddressdto",{"_index":54,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findallbyuserid(id",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.addressservice.findone(+id",{"_index":55,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findone(idaddress",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.addressservice.remove(+id",{"_index":57,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.remove(idaddress",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.addressservice.update(+id",{"_index":56,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.update(idaddress",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.signin(signindto.username",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":335,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall",{"_index":336,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(+id",{"_index":338,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(+id",{"_index":342,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(+id",{"_index":340,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.prisma.address.create",{"_index":95,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.prisma.address.delete",{"_index":101,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.prisma.address.findmany",{"_index":96,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.prisma.address.findunique",{"_index":97,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.prisma.address.update",{"_index":100,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.prisma.permissions.create",{"_index":354,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.prisma.permissions.delete",{"_index":358,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.prisma.permissions.findmany",{"_index":355,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.prisma.permissions.findunique",{"_index":356,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.prisma.permissions.update",{"_index":357,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.prisma.sellers.create",{"_index":406,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.sellers.delete",{"_index":412,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.sellers.findfirst",{"_index":410,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.sellers.findmany",{"_index":407,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.sellers.findunique",{"_index":408,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.sellers.update",{"_index":411,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.prisma.users.create",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findfirst",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findmany",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findunique",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.update",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sellersservice.create(seller",{"_index":375,"title":{},"body":{"controllers/SellersController.html":{},"controllers/UsersController.html":{}}}],["this.sellersservice.findall",{"_index":376,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findone(+id",{"_index":377,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findonebyiduser(+id",{"_index":379,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findonebyiduser(id",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.sellersservice.remove(+id",{"_index":384,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.removebyiduser(id",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.sellersservice.u(+id",{"_index":381,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.update(+id",{"_index":383,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.updatebyiduser(id",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createuser",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":499,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(username",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getallusers",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserbyid(id",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser(id",{"_index":497,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["true",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["type",{"_index":27,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":417,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSellerDto.html":{},"dependencies.html":{}}}],["un",{"_index":432,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["unauthorizedexception",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unknown",{"_index":405,"title":{},"body":{"injectables/SellersService.html":{}}}],["unlicensed",{"_index":601,"title":{},"body":{"properties.html":{}}}],["update",{"_index":21,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["update(@param('id",{"_index":382,"title":{},"body":{"controllers/SellersController.html":{}}}],["update(id",{"_index":37,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/SellersService.html":{}}}],["updateaddressdto",{"_index":38,"title":{"classes/UpdateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateauthdto",{"_index":419,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updatebyiduser",{"_index":393,"title":{},"body":{"injectables/SellersService.html":{}}}],["updatebyiduser(@param('id",{"_index":380,"title":{},"body":{"controllers/SellersController.html":{}}}],["updatebyiduser(id",{"_index":403,"title":{},"body":{"injectables/SellersService.html":{}}}],["updatepermissiondto",{"_index":325,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updatesellerbyuserid",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatesellerbyuserid(id",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatesellerdto",{"_index":373,"title":{"classes/UpdateSellerDto.html":{}},"body":{"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuseraddress",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuseraddress(id",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":426,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@get('profile",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["user.id_user",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":514,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["users.dto.ts:10",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:2",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:3",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:4",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:5",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:6",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:7",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:8",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:9",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.service",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":434,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":109,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":112,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":579,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":603,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify_mail",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["version",{"_index":597,"title":{},"body":{"properties.html":{}}}],["we're",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["world",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["yaml",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["yaml_config_filename",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["zipcode",{"_index":275,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["zoom",{"_index":70,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/SellersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/address/entities/address.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Address {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/address/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAddressDto: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAddressDto: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { Address } from '@prisma/client';\n\n@Controller('address')\nexport class AddressController {\n  constructor(private readonly addressService: AddressService) {}\n\n  create(createAddressDto: Address) {\n    return this.addressService.create(createAddressDto);\n  }\n\n  findOne(id: string) {\n    return this.addressService.findOne(+id);\n  }\n\n  update(id: string, updateAddressDto: Address) {\n    return this.addressService.update(+id, updateAddressDto);\n  }\n\n  remove(id: string) {\n    return this.addressService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_providers\n\n\n\n\nAddressService\n\nAddressService\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAddressModule -->\n\nPrismaService->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/address/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { AddressController } from './address.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [AddressController],\n  providers: [AddressService, PrismaService],\n})\nexport class AddressModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllByUserId\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/address/address.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAddressDto: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/address/address.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Address } from '@prisma/client';\n\n@Injectable()\nexport class AddressService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(data: Address) {\n    return this.prisma.address.create({\n      data: data,\n    });\n  }\n\n  findAll() {\n    return this.prisma.address.findMany();\n  }\n\n  findOne(id: number) {\n    return this.prisma.address.findUnique({\n      where: { id_address: id },\n    });\n  }\n\n  findAllByUserId(id: number) {\n    return this.prisma.address.findMany({\n      where: { id_user: id },\n    });\n  }\n\n  update(id: number, updateAddressDto: Address) {\n    return this.prisma.address.update({\n      where: { id_address: id },\n      data: updateAddressDto,\n    });\n  }\n\n  remove(id: number) {\n    return this.prisma.address.delete({\n      where: { id_address: id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nSellersModule\n\nSellersModule\n\nAppModule -->\n\nSellersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            SellersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n//import { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/configuration';\nimport databaseConfig from '../config/database.config';\nimport { AuthService } from './auth/auth.service';\nimport { UsersService } from './modules/users/users.service';\nimport { PrismaService } from './modules/prisma/prisma.service';\nimport { PermissionsModule } from './modules/permissions/permissions.module';\nimport { AddressModule } from './modules/address/address.module';\nimport { SellersModule } from './modules/sellers/sellers.module';\n\n@Module({\n  imports: [\n    ConfigModule,\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development'],\n      isGlobal: true,\n      load: [databaseConfig],\n      cache: true,\n    }),\n    UsersModule,\n    AuthModule,\n    PermissionsModule,\n    AddressModule,\n    SellersModule,\n  ],\n  controllers: [],\n  providers: [AppService, AuthService, PrismaService, UsersService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\n\nimport { SetMetadata } from '@nestjs/common';\n\nexport const IS_PUBLIC_KEY = 'isPublic';\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: Record) {\n    console.log('signInDto', signInDto);\n\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\n\nimport { jwtConstants } from './constant';\nimport { IS_PUBLIC_KEY } from './auth.controller';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // 💡 See this condition\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SetMetadata } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../modules/users/users.module';\nimport { jwtConstants } from './constant';\nimport { AuthGuard } from './auth.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { UsersService } from '../modules/users/users.service';\nimport { PrismaService } from '../modules/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n// export const IS_PUBLIC_KEY = 'isPublic';\n// export const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60000000s' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    PrismaService,\n    UsersService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../modules/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n\n  async signIn(\n    username: string,\n    pass: string,\n  ): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user.password !== pass) {\n      throw new UnauthorizedException();\n    }\n    const payload = { sub: user.id_user, username: user.username };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/address/dto/create-address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                address2\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                phone\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/address/dto/create-address.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAddressDto {\n  address: string;\n  address2: string;\n  city: string;\n  zipcode: string;\n  country: string;\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_permission\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/permissions/dto/create-permission.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/permissions/dto/create-permission.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePermissionDto {\n  name: string;\n  id_permission: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSellerDto.html":{"url":"classes/CreateSellerDto.html","title":"class - CreateSellerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSellerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sellers/dto/create-seller.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSellerDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                civility\n                            \n                            \n                                first_name\n                            \n                            \n                                id_permission\n                            \n                            \n                                id_user\n                            \n                            \n                                last_name\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                verify_mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        civility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verify_mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  civility: string;\n  first_name: string;\n  last_name: string;\n  username: string;\n  mail: string;\n  password: string;\n  id_permission: number;\n  verify_mail: boolean;\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/entities/permission.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Permission {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\n\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  create(@Body() createPermissionDto: CreatePermissionDto) {\n    return this.permissionsService.create(createPermissionDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.permissionsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n  ) {\n    return this.permissionsService.update(+id, updatePermissionDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.permissionsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPermissionsModule -->\n\nPrismaService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService, PrismaService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/permissions/permissions.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPermissionDto: CreatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/permissions/permissions.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Prisma, Permissions } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createPermissionDto: CreatePermissionDto) {\n    return this.prisma.permissions.create({\n      data: createPermissionDto,\n    });\n  }\n\n  findAll() {\n    return this.prisma.permissions.findMany();\n  }\n\n  findOne(id: number) {\n    return this.prisma.permissions.findUnique({ where: { id_permission: id } });\n  }\n\n  update(id: number, updatePermissionDto: UpdatePermissionDto) {\n    return this.prisma.permissions.update({\n      where: { id_permission: id },\n      data: updatePermissionDto,\n    });\n  }\n\n  remove(id: number) {\n    return this.prisma.permissions.delete({ where: { id_permission: id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Seller.html":{"url":"classes/Seller.html","title":"class - Seller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Seller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sellers/entities/seller.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Seller {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SellersController.html":{"url":"controllers/SellersController.html","title":"controller - SellersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SellersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sellers/sellers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sellers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SellersService } from './sellers.service';\nimport { CreateSellerDto } from './dto/create-seller.dto';\nimport { UpdateSellerDto } from './dto/update-seller.dto';\nimport { Sellers } from '@prisma/client';\n\n@Controller('sellers')\nexport class SellersController {\n  constructor(private readonly sellersService: SellersService) {}\n\n  // @Post()\n  // create(@Body() seller: Sellers) {\n  //   return this.sellersService.create(seller);\n  // }\n\n  // @Get()\n  // findAll() {\n  //   return this.sellersService.findAll();\n  // }\n\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.sellersService.findOne(+id);\n  // }\n\n  // @Get(':id')\n  // findOneByIdUser(@Param('id') id: string) {\n  //   return this.sellersService.findOneByIdUser(+id);\n  // }\n  //\n  // @Patch(':id')\n  // updateByIdUser(@Param('id') id: string, @Body() updateSellerDto: UpdateSellerDto) {\n  //   return this.sellersService.u(+id, updateSellerDto);\n  // }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateSellerDto: UpdateSellerDto) {\n  //   return this.sellersService.update(+id, updateSellerDto);\n  // }\n  //\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.sellersService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SellersModule.html":{"url":"modules/SellersModule.html","title":"module - SellersModule","body":"\n                   \n\n\n\n\n    Modules\n    SellersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SellersModule\n\n\n\ncluster_SellersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nSellersModule\n\nSellersModule\n\nSellersModule -->\n\nPrismaService->SellersModule\n\n\n\n\n\nSellersService\n\nSellersService\n\nSellersModule -->\n\nSellersService->SellersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sellers/sellers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            SellersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SellersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SellersService } from './sellers.service';\nimport { SellersController } from './sellers.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [SellersController],\n  providers: [SellersService, PrismaService],\n})\nexport class SellersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SellersService.html":{"url":"injectables/SellersService.html","title":"injectable - SellersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SellersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sellers/sellers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOneByIdSeller\n                            \n                            \n                                findOneByIdUser\n                            \n                            \n                                removeByIdUser\n                            \n                            \n                                    Async\n                                updateByIdUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sellers/sellers.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(seller: Sellers)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/sellers/sellers.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seller\n                                            \n                                                            Sellers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByIdSeller\n                        \n                    \n                \n            \n            \n                \nfindOneByIdSeller(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/sellers/sellers.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByIdUser\n                        \n                    \n                \n            \n            \n                \nfindOneByIdUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/sellers/sellers.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeByIdUser\n                        \n                    \n                \n            \n            \n                \nremoveByIdUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/sellers/sellers.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateByIdUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateByIdUser(id: number, seller: Sellers)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/sellers/sellers.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                seller\n                                            \n                                                            Sellers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSellerDto } from './dto/create-seller.dto';\nimport { UpdateSellerDto } from './dto/update-seller.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Sellers } from '@prisma/client';\n\n@Injectable()\nexport class SellersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(seller: Sellers) {\n    return this.prisma.sellers.create({\n      data: seller,\n    });\n  }\n\n  // findAll() {\n  //   return this.prisma.sellers.findMany();\n  // }\n\n  findOneByIdSeller(id: number) {\n    return this.prisma.sellers.findUnique({\n      where: {\n        id_seller: id,\n      },\n    });\n  }\n\n  findOneByIdUser(id: number) {\n    return this.prisma.sellers.findFirst({\n      where: {\n        id_user: id,\n      },\n    });\n  }\n\n  async updateByIdUser(id: number, seller: Sellers) {\n    return this.prisma.sellers.update({\n      where: {\n        id_user: id,\n      },\n      data: seller,\n    });\n  }\n\n\n  removeByIdUser(id: number) {\n    return this.prisma.sellers.delete({\n      where: {\n        id_user: id,\n      },\n    });\n  }\n\n  // update(id: number, updateSellerDto: UpdateSellerDto) {\n  //   return this.prisma.sellers.update({\n  //     where: {\n  //       id_seller: id,\n  //     },\n  //     data: updateSellerDto,\n  //   });\n  // }\n  //\n  // remove(id: number) {\n  //   return this.prisma.sellers.delete({\n  //     where: {\n  //       id_seller: id,\n  //     },\n  //   });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/address/dto/update-address.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAddressDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAddressDto } from './create-address.dto';\n\nexport class UpdateAddressDto extends PartialType(CreateAddressDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/dto/update-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/permissions/dto/update-permission.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdatePermissionDto {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSellerDto.html":{"url":"classes/UpdateSellerDto.html","title":"class - UpdateSellerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSellerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sellers/dto/update-seller.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSellerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSellerDto } from './create-seller.dto';\n\nexport class UpdateSellerDto extends PartialType(CreateSellerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                civility\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Optional\n                                first_name\n                            \n                            \n                                    Optional\n                                id_permission\n                            \n                            \n                                    Optional\n                                last_name\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        civility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id_permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserDto {\n  civility?: string;\n  first_name?: string;\n  last_name?: string;\n  username?: string;\n  mail?: string;\n  password?: string;\n  id_permission?: number;\n  deleted_at?: Date; // Optionnel pour un soft delete\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createSeller\n                            \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteSellerByUserId\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUserAddress\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    \n                                    Async\n                                getSellerByUserId\n                            \n                            \n                                    \n                                    Async\n                                getUserAddress\n                            \n                            \n                                    \n                                    Async\n                                getUserAddressById\n                            \n                            \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    Async\n                                updateSellerByUserId\n                            \n                            \n                                    \n                                    Async\n                                updateUser\n                            \n                            \n                                    \n                                    Async\n                                updateUserAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createSeller\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSeller(id: number, seller: Sellers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/sellers')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                seller\n                                            \n                                                            Sellers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: Users)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                        Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteSellerByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSellerByUserId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/sellers')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserAddress(id: number, idAddress: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/address/:idAddress')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSellerByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSellerByUserId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/sellers')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAddress(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/address')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserAddressById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAddressById(id: number, idAddress: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/address/:idAddress')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateSellerByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSellerByUserId(id: number, seller: Sellers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/sellers')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                seller\n                                            \n                                                            Sellers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, updateUserDto: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAddress(id: number, idAddress: number, updateAddressDto: Address)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/address/:idAddress')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Patch,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { Address, Sellers, Users } from '@prisma/client';\nimport { AddressService } from '../address/address.service';\nimport * as path from 'node:path';\nimport { SellersService } from '../sellers/sellers.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly addressService: AddressService,\n    private readonly sellersService: SellersService,\n  ) {}\n\n  @Post()\n  async createUser(\n    @Body()\n    createUserDto: Users,\n  ): Promise {\n    return this.usersService.createUser({ data: createUserDto });\n  }\n\n  @Get(':id')\n  async getUserById(@Param('id') id: number): Promise {\n    return this.usersService.getUserById(id);\n  }\n\n  @Get()\n  async getAllUsers(): Promise {\n    return this.usersService.getAllUsers();\n  }\n\n  @Put(':id')\n  async updateUser(\n    @Param('id') id: number,\n    @Body() updateUserDto: Partial,\n  ): Promise {\n    return this.usersService.updateUser(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  async deleteUser(@Param('id') id: number): Promise {\n    return this.usersService.deleteUser(id);\n  }\n\n  @Get(':id/address')\n  async getUserAddress(@Param('id') id: number): Promise {\n    return this.addressService.findAllByUserId(id);\n  }\n\n  @Get(':id/address/:idAddress')\n  async getUserAddressById(\n    @Param('id') id: number,\n    @Param('idAddress') idAddress: number,\n  ): Promise {\n    return this.addressService.findOne(idAddress);\n  }\n\n  @Patch(':id/address/:idAddress')\n  async updateUserAddress(\n    @Param('id') id: number,\n    @Param('idAddress') idAddress: number,\n    @Body() updateAddressDto: Address,\n  ): Promise {\n    return this.addressService.update(idAddress, updateAddressDto);\n  }\n\n  @Delete(':id/address/:idAddress')\n  async deleteUserAddress(\n    @Param('id') id: number,\n    @Param('idAddress') idAddress: number,\n  ): Promise {\n    return this.addressService.remove(idAddress);\n  }\n\n  @Post(':id/sellers')\n  async createSeller(\n    @Param('id') id: number,\n    @Body() seller: Sellers,\n  ): Promise {\n    return this.sellersService.create(seller);\n  }\n\n  @Get(':id/sellers')\n  async getSellerByUserId(@Param('id') id: number): Promise {\n    return this.sellersService.findOneByIdUser(id);\n  }\n\n  @Patch(':id/sellers')\n  async updateSellerByUserId(\n    @Param('id') id: number,\n    @Body() seller: Sellers,\n  ): Promise {\n    return this.sellersService.updateByIdUser(id, seller);\n  }\n\n  @Delete(':id/sellers')\n  async deleteSellerByUserId(@Param('id') id: number): Promise {\n    return this.sellersService.removeByIdUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAddressService\n\nAddressService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAddressService->UsersModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nSellersService\n\nSellersService\n\nUsersModule -->\n\nSellersService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            SellersService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { UsersService } from './users.service';\nimport { AddressService } from '../address/address.service';\nimport { SellersService } from '../sellers/sellers.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService,AddressService, SellersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, Users } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findOne(username: string): Promise {\n    console.log('username', username);\n\n    return this.prisma.users.findFirst({\n      where: {\n        username: username,\n      },\n    });\n  }\n\n  async createUser({ data }: { data: Users }): Promise {\n    return this.prisma.users.create({\n      data,\n    });\n  }\n\n  async getUserById(id: number): Promise {\n    return this.prisma.users.findUnique({\n      where: { id_user: id },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return this.prisma.users.findMany();\n  }\n\n  async updateUser(id: number, data: Partial): Promise {\n    return this.prisma.users.update({\n      where: { id_user: id },\n      data,\n    });\n  }\n\n  async deleteUser(id: number): Promise {\n    return this.prisma.users.update({\n      where: { id_user: id },\n      data: { deleted_at: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/address/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/address/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/address/dto/update-address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/address/entities/address.entity.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/permissions/entities/permission.entity.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/modules/prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sellers/dto/create-seller.dto.ts\n            \n            class\n            CreateSellerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sellers/dto/update-seller.dto.ts\n            \n            class\n            UpdateSellerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sellers/entities/seller.entity.ts\n            \n            class\n            Seller\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sellers/sellers.controller.ts\n            \n            controller\n            SellersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sellers/sellers.service.ts\n            \n            injectable\n            SellersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-users.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-users.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^6.0.1\n        \n            js-yaml : ^4.1.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/role/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/modules/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLoomeria - Backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SellersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_SellersModule\n\n\n\ncluster_SellersModule_providers\n\n\n\n\nAddressService\n\nAddressService\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAddressService->UsersModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAddressModule -->\n\nPrismaService->AddressModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPrismaService->PermissionsModule\n\n\n\n\n\nSellersModule\n\nSellersModule\n\nSellersModule -->\n\nPrismaService->SellersModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\nAppModule -->\n\nSellersModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nSellersService\n\nSellersService\n\nSellersModule -->\n\nSellersService->SellersModule\n\n\n\nUsersModule -->\n\nSellersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../auth.controller.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            Public   (src/.../auth.controller.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (config/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret:\n    'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        YAML_CONFIG_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'config.yaml'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
