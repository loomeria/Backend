var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.188,1,1.961]],["body/modules/AppModule.html",[0,1.577,1,3.792,2,1.084,3,1.084,4,1.326,5,1.326,6,1.084,7,2.326,8,1.326,9,1.943,10,1.943,11,1.943,12,2.866,13,0.035,14,2.866,15,2.584,16,2.866,17,2.342,18,1.773,19,1.943,20,1.957,21,1.326,22,1.196,23,0.26,24,0.191,25,0.225,26,2.342,27,2.867,28,1.262,29,0.568,30,2.342,31,2.342,32,2.342,33,2.342,34,1.943,35,3.456,36,1.943,37,2.342,38,2.342,39,3.456,40,2.342,41,2.342,42,1.68,43,1.943,44,2.342,45,2.342,46,2.342,47,2.342,48,2.342,49,2.342,50,1.957,51,2.342,52,2.342,53,0.986,54,0.26,55,0.013,56,0.019,57,0.019]],["title/injectables/AppService.html",[16,1.753,58,0.905]],["body/injectables/AppService.html",[13,0.034,16,2.792,23,0.438,24,0.321,25,0.378,28,0.868,29,0.956,54,0.438,55,0.021,56,0.028,57,0.028,58,1.441,59,2.01,60,3.266,61,1.151,62,2.281,63,5.64,64,1.511,65,3.937,66,1.658,67,2.075,68,1.658,69,3.937,70,3.937]],["title/classes/Auth.html",[55,0.017,71,1.961]],["body/classes/Auth.html",[13,0.032,23,0.507,24,0.372,25,0.438,54,0.507,55,0.025,56,0.03,57,0.03,71,3.413,72,1.75,73,3.781]],["title/controllers/AuthController.html",[74,1.433,75,1.961]],["body/controllers/AuthController.html",[13,0.035,17,2.082,23,0.306,24,0.224,25,0.264,28,1.077,29,0.942,50,1.559,53,1.159,54,0.5,55,0.015,56,0.022,57,0.022,61,0.804,62,1.797,64,1.491,66,1.635,68,1.635,71,1.743,74,1.274,75,2.459,76,1.974,77,1.974,78,3.883,79,3.221,80,2.753,81,3.221,82,2.753,83,2.753,84,2.199,85,2.199,86,1.983,87,3.883,88,2.753,89,4.499,90,2.753,91,2.753,92,1.057,93,4.499,94,1.974,95,2.753,96,2.753,97,1.974,98,2.283,99,2.753,100,1.559,101,2.283,102,2.283,103,2.283,104,2.459,105,1.559,106,1.743,107,2.459,108,1.974,109,2.753,110,1.743,111,2.753,112,2.753,113,2.753,114,2.753,115,2.753,116,2.753,117,2.753,118,2.753,119,2.753,120,2.753]],["title/guards/AuthGuard.html",[100,1.753,121,2.221]],["body/guards/AuthGuard.html",[13,0.036,23,0.225,24,0.165,25,0.194,28,1.055,29,0.491,50,1.752,54,0.225,55,0.011,56,0.017,57,0.017,58,0.904,61,0.591,62,1.432,64,1.443,66,1.302,67,1.302,68,1.582,84,2.128,85,2.128,86,1.919,92,1.742,98,4.132,100,1.752,104,2.874,105,1.145,106,1.959,122,2.021,123,1.677,124,2.128,125,4.211,126,3.255,127,3.094,128,2.219,129,2.021,130,3.971,131,4.982,132,2.021,133,3.094,134,4.211,135,2.021,136,2.021,137,1.959,138,3.094,139,2.021,140,3.758,141,3.118,142,1.28,143,1.677,144,1.45,145,1.28,146,1.677,147,1.677,148,1.677,149,2.021,150,2.021,151,2.021,152,2.021,153,2.021,154,2.021,155,4.211,156,2.021,157,2.566,158,1.579,159,2.021,160,3.118,161,1.45,162,2.021,163,1.45,164,1.677,165,2.021,166,2.021,167,1.677,168,1.677,169,2.021,170,2.021,171,2.021,172,2.021,173,2.021,174,2.021,175,2.021]],["title/modules/AuthModule.html",[0,1.188,12,1.753]],["body/modules/AuthModule.html",[0,1.533,2,1.034,3,1.034,4,1.265,5,1.265,6,1.034,7,2.262,8,2.262,12,3.245,13,0.036,15,2.539,17,2.623,18,1.743,19,1.909,20,1.889,21,1.265,22,1.14,23,0.248,24,0.182,25,0.214,27,2.768,28,1.25,29,0.81,34,1.853,42,1.602,43,1.853,50,1.889,53,1.405,54,0.444,55,0.012,56,0.019,57,0.019,75,2.529,100,1.889,101,1.853,102,1.853,103,1.853,104,2.113,105,1.265,106,1.414,107,1.414,108,1.602,142,1.414,144,1.602,145,1.414,146,1.853,147,1.853,163,1.602,164,1.853,176,1.853,177,2.234,178,1.853,179,2.234,180,2.234,181,2.234,182,3.336,183,1.265,184,1.14,185,2.234,186,2.234,187,2.234,188,2.234,189,2.234,190,2.234,191,2.234]],["title/injectables/AuthService.html",[17,1.433,58,0.905]],["body/injectables/AuthService.html",[13,0.035,17,1.778,19,2.043,23,0.302,24,0.221,25,0.26,28,0.984,29,0.658,42,1.944,54,0.302,55,0.015,56,0.022,57,0.022,58,1.123,59,1.384,61,0.792,62,1.778,64,1.475,66,1.141,67,2.24,68,1.141,79,3.701,84,2.176,85,2.176,86,1.961,92,1.475,104,2.433,124,2.527,126,2.755,128,2.755,130,4.539,137,2.433,141,3.187,142,1.717,157,2.249,158,1.384,160,2.249,161,2.755,192,2.249,193,2.711,194,2.711,195,2.711,196,4.854,197,2.711,198,2.826,199,2.433,200,2.711,201,2.711,202,2.711,203,2.711,204,2.711,205,2.711,206,2.711,207,2.711]],["title/classes/CreateAuthDto.html",[55,0.017,208,1.961]],["body/classes/CreateAuthDto.html",[13,0.032,23,0.504,24,0.369,25,0.435,54,0.504,55,0.025,56,0.03,57,0.03,72,1.739,208,3.4,209,3.757,210,3.248]],["title/classes/CreatePermissionDto.html",[55,0.017,211,1.581]],["body/classes/CreatePermissionDto.html",[13,0.032,23,0.504,24,0.369,25,0.435,54,0.504,55,0.025,56,0.03,57,0.03,72,1.739,211,2.741,212,3.757,213,3.248]],["title/classes/CreateUserDto.html",[55,0.017,214,1.961]],["body/classes/CreateUserDto.html",[13,0.034,23,0.317,24,0.232,25,0.274,54,0.317,55,0.015,56,0.022,57,0.022,61,0.833,64,2.208,67,2.501,72,1.094,92,2.208,198,2.904,214,2.52,215,4.833,216,2.044,217,2.254,218,3.803,219,3.803,220,3.803,221,3.803,222,3.803,223,3.803,224,3.288,225,4.585,226,2.364,227,2.364,228,2.81,229,2.364,230,2.85,231,2.364,232,2.364,233,2.364,234,2.364,235,3.98,236,2.364]],["title/classes/Permission.html",[55,0.017,237,1.961]],["body/classes/Permission.html",[13,0.032,23,0.507,24,0.372,25,0.438,54,0.507,55,0.025,56,0.03,57,0.03,72,1.75,237,3.413,238,3.781]],["title/controllers/PermissionsController.html",[74,1.433,239,1.961]],["body/controllers/PermissionsController.html",[13,0.036,23,0.304,24,0.223,25,0.262,28,1.074,29,0.663,53,1.15,54,0.304,55,0.015,56,0.022,57,0.022,67,1.886,68,2.163,74,1.264,77,1.959,94,2.77,97,2.77,110,1.73,199,1.73,211,2.288,239,2.446,240,2.266,241,2.266,242,2.732,243,2.266,244,1.959,245,2.288,246,2.266,247,2.266,248,2.77,249,2.758,250,2.266,251,2.732,252,2.732,253,2.732,254,2.266,255,2.732,256,2.266,257,2.732,258,2.838,259,2.732,260,2.732,261,2.732,262,2.266,263,2.732,264,2.266,265,2.732,266,2.732]],["title/modules/PermissionsModule.html",[0,1.188,14,1.753]],["body/modules/PermissionsModule.html",[0,1.905,2,1.537,3,1.537,4,1.881,5,1.881,6,1.537,7,2.81,8,1.881,13,0.035,14,3.323,18,1.984,20,2.501,21,1.881,22,1.696,23,0.369,24,0.271,25,0.319,28,1.166,29,0.806,53,1.86,54,0.369,55,0.018,56,0.025,57,0.025,239,3.143,245,2.891,246,2.755,267,2.755,268,2.755,269,3.322,270,3.322,271,2.104]],["title/injectables/PermissionsService.html",[58,0.905,245,1.581]],["body/injectables/PermissionsService.html",[13,0.036,18,1.003,23,0.318,24,0.233,25,0.275,28,1.152,29,0.694,54,0.318,55,0.016,56,0.022,57,0.022,58,1.166,59,1.461,66,1.68,68,2.201,158,1.461,183,1.62,184,1.461,211,2.037,228,2.602,237,3.148,241,3.31,245,2.037,247,2.374,248,2.862,249,2.602,250,2.374,254,2.374,258,2.91,271,1.812,272,2.374,273,2.862,274,5.228,275,2.862,276,2.862,277,2.862,278,2.374,279,2.862,280,2.862]],["title/injectables/PrismaService.html",[18,1.085,58,0.905]],["body/injectables/PrismaService.html",[13,0.035,18,1.66,23,0.411,24,0.301,25,0.355,28,1.044,29,0.897,54,0.411,55,0.02,56,0.027,57,0.027,58,1.384,59,1.887,61,1.08,62,2.192,64,1.419,66,1.556,124,2.959,148,3.065,161,2.65,184,1.887,281,3.065,282,3.396,283,4.335,284,5.83,285,3.696,286,3.696]],["title/classes/UpdateAuthDto.html",[55,0.017,287,2.221]],["body/classes/UpdateAuthDto.html",[13,0.034,23,0.458,24,0.336,25,0.395,28,1.117,54,0.458,55,0.022,56,0.028,57,0.028,72,1.58,208,2.607,210,2.952,282,3.634,287,3.634,288,3.415,289,5.068,290,3.415,291,2.952,292,2.952,293,2.952,294,4.117]],["title/classes/UpdatePermissionDto.html",[55,0.017,249,1.753]],["body/classes/UpdatePermissionDto.html",[13,0.034,23,0.458,24,0.336,25,0.395,28,1.117,54,0.458,55,0.022,56,0.028,57,0.028,72,1.58,211,2.102,213,2.952,248,2.952,249,2.87,282,3.634,290,3.415,291,2.952,292,2.952,293,2.952,295,3.415,296,5.068]],["title/classes/UpdateUserDto.html",[55,0.017,297,1.961]],["body/classes/UpdateUserDto.html",[13,0.033,23,0.303,24,0.222,25,0.261,54,0.303,55,0.015,56,0.022,57,0.022,61,0.795,64,2.148,67,2.481,72,1.045,86,3.09,92,2.148,198,2.832,216,1.952,217,2.181,218,3.709,219,3.709,220,3.709,222,3.709,223,3.709,224,3.207,226,2.257,227,2.257,228,2.181,229,2.257,231,2.257,232,2.257,233,2.257,234,2.257,236,2.257,244,1.952,297,2.44,298,4.721,299,3.709,300,3.195,301,2.721,302,2.721,303,2.721,304,2.721]],["title/controllers/UsersController.html",[74,1.433,305,1.961]],["body/controllers/UsersController.html",[13,0.035,19,1.466,23,0.231,24,0.169,25,0.199,28,0.842,29,0.503,53,0.873,54,0.231,55,0.011,56,0.018,57,0.018,61,0.606,62,1.46,64,1.762,66,1.932,68,1.932,74,0.959,77,1.487,81,3.808,84,2.416,85,2.416,86,2.178,92,1.638,94,2.738,97,2.738,110,1.313,124,3.259,137,3.427,184,1.059,199,1.313,214,2.418,228,3.005,243,1.72,244,1.487,256,2.617,258,3.062,262,1.72,264,2.617,297,2.702,305,1.998,306,1.72,307,3.808,308,3.167,309,2.617,310,3.539,311,2.617,312,3.167,313,2.073,314,2.073,315,1.72,316,2.073,317,2.073,318,1.72,319,2.073,320,1.72,321,3.167,322,3.154,323,2.073,324,2.073,325,1.72,326,2.073,327,2.073,328,1.72,329,2.073,330,2.073,331,2.073,332,2.073,333,2.073,334,2.073]],["title/modules/UsersModule.html",[0,1.188,15,1.581]],["body/modules/UsersModule.html",[0,1.905,2,1.537,3,1.537,4,1.881,5,1.881,6,1.537,7,2.81,8,1.881,13,0.035,15,2.996,18,1.984,19,2.173,20,2.501,21,1.881,22,1.696,23,0.369,24,0.271,25,0.319,28,1.166,29,0.806,53,1.86,54,0.369,55,0.018,56,0.025,57,0.025,271,2.104,305,3.143,325,2.755,335,3.322,336,3.322,337,3.322,338,3.322]],["title/injectables/UsersService.html",[19,1.188,58,0.905]],["body/injectables/UsersService.html",[13,0.035,18,1.313,19,1.005,23,0.182,24,0.133,25,0.157,28,0.722,29,0.396,54,0.182,55,0.009,56,0.015,57,0.015,58,0.765,59,0.834,61,0.477,62,1.211,64,1.834,66,1.842,67,1.379,68,1.842,84,2.478,85,2.478,86,2.234,92,1.892,110,1.034,124,3.194,126,2.349,128,1.171,137,3.331,158,0.834,183,1.855,184,0.834,198,3.026,199,2.373,217,1.482,221,2.717,224,2.687,228,2.791,258,2.771,271,1.034,299,1.355,300,1.355,307,3.402,308,2.717,309,2.171,310,3.108,311,2.171,312,2.171,315,2.171,318,2.171,320,2.171,321,2.717,328,3.963,339,1.355,340,2.617,341,1.633,342,1.633,343,1.633,344,2.617,345,1.633,346,1.633,347,2.617,348,1.633,349,1.633,350,1.633,351,1.633,352,1.355,353,1.355,354,3.747,355,2.171,356,2.617,357,2.617,358,2.617,359,2.617,360,2.617,361,1.633,362,1.633,363,1.633,364,1.633,365,1.633,366,1.633,367,2.617]],["title/coverage.html",[368,3.022]],["body/coverage.html",[6,1.087,13,0.035,16,1.331,17,1.087,18,0.823,19,0.902,25,0.226,55,0.029,56,0.019,57,0.019,58,1.415,60,1.949,71,1.488,73,1.949,74,1.904,75,1.488,76,2.951,92,0.902,100,1.331,105,1.331,107,1.488,121,1.685,123,1.949,145,1.488,158,1.2,183,1.331,192,1.949,208,1.488,209,1.949,210,2.485,211,1.2,212,1.949,213,2.485,214,1.488,215,1.949,216,2.485,237,1.488,238,1.949,239,1.488,240,1.949,245,1.2,249,1.331,272,1.949,281,1.949,287,1.685,288,1.949,295,1.949,297,1.488,298,1.949,305,1.488,306,1.949,339,1.949,368,1.685,369,1.949,370,2.35,371,2.35,372,1.949,373,4.843,374,1.949,375,6.13,376,5.883,377,3.464,378,3.464,379,2.35,380,1.949,381,1.949,382,3.464,383,2.485,384,1.949,385,2.35,386,3.464,387,2.35,388,2.35,389,2.35]],["title/dependencies.html",[3,1.722,390,2.15]],["body/dependencies.html",[3,1.822,13,0.035,29,0.956,36,3.266,56,0.028,57,0.028,142,2.493,143,3.266,144,2.824,184,2.01,291,2.824,292,2.824,391,5.382,392,3.937,393,3.937,394,3.937,395,3.937,396,3.937,397,3.937,398,3.937,399,3.937,400,3.937,401,3.937,402,3.937,403,3.937]],["title/miscellaneous/functions.html",[404,1.641,405,3.086]],["body/miscellaneous/functions.html",[6,2.634,13,0.03,56,0.03,57,0.03,61,1.307,381,3.711,383,3.208,384,4.722,404,2.833,405,3.711,406,4.473,407,3.711]],["title/index.html",[61,0.757,408,2.592,409,2.592]],["body/index.html",[13,0.032,22,2.363,24,0.152,56,0.016,57,0.016,168,1.543,278,1.543,368,1.334,369,2.406,410,1.86,411,1.86,412,3.567,413,2.901,414,1.86,415,1.86,416,1.86,417,1.86,418,2.901,419,1.543,420,3.567,421,1.86,422,1.86,423,1.86,424,4.029,425,1.86,426,4.029,427,5.001,428,1.86,429,4.834,430,1.86,431,1.86,432,1.86,433,2.901,434,1.86,435,2.901,436,1.86,437,3.567,438,1.86,439,2.901,440,1.86,441,1.86,442,1.86,443,1.86,444,1.86,445,4.029,446,5.001,447,4.629,448,1.86,449,2.901,450,1.86,451,1.86,452,1.86,453,1.86,454,1.86,455,4.629,456,2.901,457,4.029,458,1.86,459,2.901,460,1.86,461,1.86,462,2.901,463,4.629,464,4.029,465,1.86,466,2.901,467,1.86,468,1.86,469,1.86,470,1.86,471,4.029,472,1.86,473,1.86,474,1.86,475,1.86,476,2.901,477,1.86,478,1.86,479,1.86,480,1.86,481,1.86,482,2.901,483,1.86,484,1.86,485,1.86,486,2.901,487,1.86,488,1.86,489,3.342,490,2.901,491,1.86,492,1.86,493,1.86,494,1.86,495,1.86,496,1.86,497,1.86,498,1.86,499,2.901,500,1.86,501,1.86,502,1.86,503,1.86,504,3.567,505,1.86,506,1.86,507,1.86,508,1.86,509,1.86,510,1.86,511,2.901,512,1.86,513,1.86,514,1.86,515,1.86,516,2.901,517,1.86,518,1.86,519,1.86,520,2.901,521,2.901,522,1.86,523,1.86,524,1.86,525,1.86,526,1.86,527,1.86,528,1.86,529,1.86,530,1.86,531,1.86,532,1.543,533,1.86,534,1.86,535,1.86,536,1.86,537,1.86,538,1.86,539,1.543]],["title/modules.html",[2,1.95]],["body/modules.html",[1,2.699,2,1.972,12,2.414,13,0.029,14,2.414,15,2.176,56,0.029,57,0.029,489,4.81,540,5.799,541,5.799,542,5.799]],["title/overview.html",[543,3.495]],["body/overview.html",[0,1.061,1,3.841,2,1.279,3,1.279,4,1.565,5,1.565,6,1.279,7,1.565,8,1.565,9,2.292,10,2.292,11,2.292,12,3.346,13,0.034,14,3.116,15,2.868,16,2.553,17,2.6,18,1.876,19,1.981,20,2.205,21,1.565,22,1.411,53,1.163,56,0.022,57,0.022,59,1.411,72,1.061,121,1.982,176,2.292,178,2.292,245,2.302,267,2.292,268,2.292,355,2.292,543,2.292,544,2.763,545,2.763,546,2.763,547,2.763]],["title/properties.html",[217,2.107,390,2.15]],["body/properties.html",[13,0.034,56,0.03,57,0.03,217,2.565,419,3.757,532,3.757,539,3.757,548,4.53,549,4.53,550,4.53]],["title/miscellaneous/variables.html",[404,1.641,551,3.086]],["body/miscellaneous/variables.html",[13,0.035,24,0.272,50,1.89,56,0.025,57,0.025,61,0.975,67,1.865,76,2.393,92,1.909,105,2.509,106,2.113,107,2.806,108,2.393,145,2.806,158,1.704,163,3.178,167,2.768,183,2.509,283,2.768,293,2.393,352,4.575,353,4.703,372,2.768,374,3.675,380,2.768,383,2.393,404,2.113,407,2.768,551,2.768,552,4.431,553,3.337,554,3.337,555,3.337,556,3.337,557,3.337,558,3.337,559,3.337,560,3.337,561,3.337,562,3.337]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":549,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["10.0.0",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["3",{"_index":545,"title":{},"body":{"overview.html":{}}}],["3.3.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":544,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":546,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["60000000s",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.8.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":547,"title":{},"body":{"overview.html":{}}}],["access",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":274,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["adds",{"_index":275,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["allowing",{"_index":477,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":526,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":447,"title":{},"body":{"index.html":{}}}],["applications",{"_index":418,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":16,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":71,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["auth.dto",{"_index":294,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":210,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.guard",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":75,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":100,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":12,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":532,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":17,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["aws",{"_index":466,"title":{},"body":{"index.html":{}}}],["backers",{"_index":527,"title":{},"body":{"index.html":{}}}],["based",{"_index":461,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["board",{"_index":519,"title":{},"body":{"index.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":542,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":540,"title":{},"body":{"modules.html":{}}}],["building",{"_index":413,"title":{},"body":{"index.html":{}}}],["cache",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["changeme",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":492,"title":{},"body":{"index.html":{}}}],["check",{"_index":455,"title":{},"body":{"index.html":{}}}],["civility",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["class",{"_index":55,"title":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":476,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":460,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_permissionsmodule",{"_index":267,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":268,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":335,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":336,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["come",{"_index":483,"title":{},"body":{"index.html":{}}}],["complex",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["config.yaml",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../configuration.ts",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["config/configuration.ts",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/database.config",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('signindto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('username",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["constant",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(jwtservice",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(prisma",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":74,"title":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('permissions",{"_index":251,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('users",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":498,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":368,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":293,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":252,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["create(createpermissiondto",{"_index":273,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createauthdto",{"_index":208,"title":{"classes/CreateAuthDto.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createpermissiondto",{"_index":211,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createuser",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(undefined",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":214,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["data",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":300,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":494,"title":{},"body":{"index.html":{}}}],["default",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":244,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":264,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["deleted_at",{"_index":299,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":445,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":465,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":456,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":475,"title":{},"body":{"index.html":{}}}],["description",{"_index":419,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":430,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":506,"title":{},"body":{"index.html":{}}}],["discord",{"_index":491,"title":{},"body":{"index.html":{}}}],["dive",{"_index":493,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":369,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":247,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["dto/update",{"_index":250,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["e2e",{"_index":440,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":414,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":453,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":451,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":510,"title":{},"body":{"index.html":{}}}],["env.development",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":426,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["experience",{"_index":496,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":282,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["extracttokenfromheader",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["fast",{"_index":469,"title":{},"body":{"index.html":{}}}],["features",{"_index":479,"title":{},"body":{"index.html":{}}}],["few",{"_index":471,"title":{},"body":{"index.html":{}}}],["file",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":254,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["findone",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":257,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["findone(id",{"_index":276,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["findone(username",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["first_name",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["focus",{"_index":478,"title":{},"body":{"index.html":{}}}],["follow",{"_index":513,"title":{},"body":{"index.html":{}}}],["framework",{"_index":412,"title":{},"body":{"index.html":{}}}],["full",{"_index":509,"title":{},"body":{"index.html":{}}}],["function",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":405,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":474,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":256,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["get('profile",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["getallusers",{"_index":310,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["gethello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":408,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["global",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":501,"title":{},"body":{"index.html":{}}}],["grow",{"_index":523,"title":{},"body":{"index.html":{}}}],["guard",{"_index":121,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guess",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["handlers",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hands",{"_index":495,"title":{},"body":{"index.html":{}}}],["handy",{"_index":484,"title":{},"body":{"index.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":499,"title":{},"body":{"index.html":{}}}],["here",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["httpcode",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":536,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":258,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id_permission",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["id_user",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":61,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":458,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":481,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":473,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":428,"title":{},"body":{"index.html":{}}}],["instead",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":502,"title":{},"body":{"index.html":{}}}],["is_public_key",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":516,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":518,"title":{},"body":{"index.html":{}}}],["john",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":529,"title":{},"body":{"index.html":{}}}],["js",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["jwtconstants",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":533,"title":{},"body":{"index.html":{}}}],["keep",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":448,"title":{},"body":{"index.html":{}}}],["last_name",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["learn",{"_index":487,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":539,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":521,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":515,"title":{},"body":{"index.html":{}}}],["literal",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["load",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":459,"title":{},"body":{"index.html":{}}}],["loop",{"_index":512,"title":{},"body":{"index.html":{}}}],["mail",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["main",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makes",{"_index":467,"title":{},"body":{"index.html":{}}}],["managing",{"_index":480,"title":{},"body":{"index.html":{}}}],["maria",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":463,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":404,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":520,"title":{},"body":{"index.html":{}}}],["mode",{"_index":433,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/permissions/permissions.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/prisma/prisma.service",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/users/users.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/users/users.service",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["more",{"_index":457,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":534,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":507,"title":{},"body":{"index.html":{}}}],["nest",{"_index":420,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":538,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":446,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":291,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":411,"title":{},"body":{"index.html":{}}}],["npm",{"_index":427,"title":{},"body":{"index.html":{}}}],["number",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PermissionsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":517,"title":{},"body":{"index.html":{}}}],["official",{"_index":464,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":284,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":522,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["optionnel",{"_index":301,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["out",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outside",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":543,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":390,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":243,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":262,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["part",{"_index":508,"title":{},"body":{"index.html":{}}}],["partial",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":290,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["partialtype(createauthdto",{"_index":289,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createpermissiondto",{"_index":296,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["pass",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":242,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["patch(':id",{"_index":260,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["payload",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["permission",{"_index":237,"title":{"classes/Permission.html":{}},"body":{"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{}}}],["permission.dto",{"_index":248,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":213,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permissions",{"_index":241,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["permissions.controller",{"_index":270,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":246,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissionscontroller",{"_index":239,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":14,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":245,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["platform",{"_index":462,"title":{},"body":{"index.html":{}}}],["please",{"_index":490,"title":{},"body":{"index.html":{}}}],["possible",{"_index":454,"title":{},"body":{"index.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["pour",{"_index":302,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["prefix",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/PermissionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":271,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":283,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":18,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":435,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":410,"title":{},"body":{"index.html":{}}}],["project",{"_index":424,"title":{},"body":{"index.html":{}}}],["promise",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":217,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@post('login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":488,"title":{},"body":{"index.html":{}}}],["read",{"_index":530,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":444,"title":{},"body":{"index.html":{}}}],["real",{"_index":503,"title":{},"body":{"index.html":{}}}],["record",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["remove(@param('id",{"_index":265,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["remove(id",{"_index":279,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["removes",{"_index":280,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["repository",{"_index":423,"title":{},"body":{"index.html":{}}}],["req",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requiring",{"_index":470,"title":{},"body":{"index.html":{}}}],["reset",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":482,"title":{},"body":{"index.html":{}}}],["results",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":429,"title":{},"body":{"index.html":{}}}],["runs",{"_index":452,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":415,"title":{},"body":{"index.html":{}}}],["secret",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["server",{"_index":416,"title":{},"body":{"index.html":{}}}],["setmetadata",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["setmetadata(is_public_key",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":425,"title":{},"body":{"index.html":{}}}],["side",{"_index":417,"title":{},"body":{"index.html":{}}}],["signin",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.password",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":472,"title":{},"body":{"index.html":{}}}],["soft",{"_index":304,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["source",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":525,"title":{},"body":{"index.html":{}}}],["src/.../auth.controller.ts",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:16",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:22",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:50",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constant.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/create",{"_index":209,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":288,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":73,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/permissions/dto/create",{"_index":212,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permissions/dto/update",{"_index":295,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/modules/permissions/entities/permission.entity.ts",{"_index":238,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{}}}],["src/modules/permissions/permissions.controller.ts",{"_index":240,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/modules/permissions/permissions.module.ts",{"_index":269,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/modules/permissions/permissions.service.ts",{"_index":272,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/modules/prisma/prisma.service.ts",{"_index":281,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/modules/prisma/prisma.service.ts:6",{"_index":285,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/modules/prisma/seed.ts",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/dto/create",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":298,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:18",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:26",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:31",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:36",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":337,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:22",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:32",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:38",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:44",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:48",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:55",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:6",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:9",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":431,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":434,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":436,"title":{},"body":{"index.html":{}}}],["started",{"_index":409,"title":{"index.html":{}},"body":{}}],["starter",{"_index":422,"title":{},"body":{"index.html":{}}}],["statements",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":511,"title":{},"body":{"index.html":{}}}],["steps",{"_index":449,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":468,"title":{},"body":{"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":489,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":541,"title":{},"body":{"modules.html":{}}}],["table",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":450,"title":{},"body":{"index.html":{}}}],["test",{"_index":439,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":442,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":441,"title":{},"body":{"index.html":{}}}],["tests",{"_index":437,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":524,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":286,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.signin(signindto.username",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":253,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall",{"_index":255,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(+id",{"_index":259,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(+id",{"_index":266,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(+id",{"_index":263,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.prisma.users.create",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findfirst",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findmany",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.findunique",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.users.update",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.usersservice.createuser",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(username",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getallusers",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserbyid(id",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser(id",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["time",{"_index":504,"title":{},"body":{"index.html":{}}}],["token",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":531,"title":{},"body":{"index.html":{}}}],["true",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":537,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":292,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdatePermissionDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":421,"title":{},"body":{"index.html":{}}}],["un",{"_index":303,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["unauthorizedexception",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":438,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":550,"title":{},"body":{"properties.html":{}}}],["update",{"_index":261,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["update(id",{"_index":277,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["updateauthdto",{"_index":287,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":249,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updates",{"_index":278,"title":{},"body":{"injectables/PermissionsService.html":{},"index.html":{}}}],["updateuser",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":297,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@get('profile",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id_user",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":338,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto.ts",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["users.dto.ts:10",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:2",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:3",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:4",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:5",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:6",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:7",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:8",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.dto.ts:9",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["users.service",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":305,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":15,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":19,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":505,"title":{},"body":{"index.html":{}}}],["value",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":551,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify_mail",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["version",{"_index":548,"title":{},"body":{"properties.html":{}}}],["video",{"_index":497,"title":{},"body":{"index.html":{}}}],["visit",{"_index":486,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":500,"title":{},"body":{"index.html":{}}}],["watch",{"_index":432,"title":{},"body":{"index.html":{}}}],["we're",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["website",{"_index":535,"title":{},"body":{"index.html":{}}}],["working",{"_index":485,"title":{},"body":{"index.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":514,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["yaml_config_filename",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":528,"title":{},"body":{"index.html":{}}}],["you're",{"_index":443,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n//import { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/configuration';\nimport databaseConfig from '../config/database.config';\nimport { AuthService } from './auth/auth.service';\nimport { UsersService } from './modules/users/users.service';\nimport { PrismaService } from './modules/prisma/prisma.service';\nimport { PermissionsModule } from './modules/permissions/permissions.module';\n\n@Module({\n  imports: [\n    ConfigModule,\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development'],\n      isGlobal: true,\n      load: [databaseConfig],\n      cache: true,\n    }),\n    UsersModule,\n    AuthModule,\n    PermissionsModule,\n  ],\n  controllers: [],\n  providers: [AppService, AuthService, PrismaService, UsersService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\n\nimport { SetMetadata } from '@nestjs/common';\n\nexport const IS_PUBLIC_KEY = 'isPublic';\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: Record) {\n    console.log('signInDto', signInDto);\n\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\n\nimport { jwtConstants } from './constant';\nimport { IS_PUBLIC_KEY } from './auth.controller';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // 💡 See this condition\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SetMetadata } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../modules/users/users.module';\nimport { jwtConstants } from './constant';\nimport { AuthGuard } from './auth.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { UsersService } from '../modules/users/users.service';\nimport { PrismaService } from '../modules/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n// export const IS_PUBLIC_KEY = 'isPublic';\n// export const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60000000s' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    PrismaService,\n    UsersService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../modules/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async signIn(\n    username: string,\n    pass: string,\n  ): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user.password !== pass) {\n      throw new UnauthorizedException();\n    }\n    const payload = { sub: user.id_user, username: user.username };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePermissionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                civility\n                            \n                            \n                                first_name\n                            \n                            \n                                id_permission\n                            \n                            \n                                id_user\n                            \n                            \n                                last_name\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                verify_mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        civility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verify_mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  civility: string;\n  first_name: string;\n  last_name: string;\n  username: string;\n  mail: string;\n  password: string;\n  id_permission: number;\n  verify_mail: boolean;\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/entities/permission.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Permission {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\n\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  // @Post()\n  // create(@Body() createPermissionDto: CreatePermissionDto) {\n  //   return this.permissionsService.create(createPermissionDto);\n  // }\n  //\n  // @Get()\n  // findAll() {\n  //   return this.permissionsService.findAll();\n  // }\n  //\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.permissionsService.findOne(+id);\n  // }\n  //\n  // @Patch(':id')\n  // update(\n  //   @Param('id') id: string,\n  //   @Body() updatePermissionDto: UpdatePermissionDto,\n  // ) {\n  //   return this.permissionsService.update(+id, updatePermissionDto);\n  // }\n  //\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.permissionsService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPermissionsModule -->\n\nPrismaService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService, PrismaService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/permissions.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Prisma, Permissions } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class PermissionsService {\n  // create(createPermissionDto: CreatePermissionDto) {\n  //   return 'This action adds a new permission';\n  // }\n  //\n  // findAll() {\n  //   return `This action returns all permissions`;\n  // }\n  //\n  // findOne(id: number) {\n  //   return `This action returns a #${id} permission`;\n  // }\n  //\n  // update(id: number, updatePermissionDto: UpdatePermissionDto) {\n  //   return `This action updates a #${id} permission`;\n  // }\n  //\n  // remove(id: number) {\n  //   return `This action removes a #${id} permission`;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                civility\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Optional\n                                first_name\n                            \n                            \n                                    Optional\n                                id_permission\n                            \n                            \n                                    Optional\n                                last_name\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        civility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id_permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-users.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserDto {\n  civility?: string;\n  first_name?: string;\n  last_name?: string;\n  username?: string;\n  mail?: string;\n  password?: string;\n  id_permission?: number;\n  deleted_at?: Date; // Optionnel pour un soft delete\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: Users)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                        Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, updateUserDto: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { Users } from '@prisma/client';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async createUser(\n    @Body()\n    createUserDto: Users,\n  ): Promise {\n    return this.usersService.createUser({ data: createUserDto });\n  }\n\n  @Get(':id')\n  async getUserById(@Param('id') id: number): Promise {\n    return this.usersService.getUserById(id);\n  }\n\n  @Get()\n  async getAllUsers(): Promise {\n    return this.usersService.getAllUsers();\n  }\n\n  @Put(':id')\n  async updateUser(\n    @Param('id') id: number,\n    @Body() updateUserDto: Partial,\n  ): Promise {\n    return this.usersService.updateUser(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  async deleteUser(@Param('id') id: number): Promise {\n    return this.usersService.deleteUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, Users } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  private readonly users = [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ];\n\n  async findOne(username: string): Promise {\n    console.log('username', username);\n\n    return this.prisma.users.findFirst({\n      where: {\n        username: username,\n      },\n    });\n  }\n\n  async createUser({ data }: { data: Users }): Promise {\n    return this.prisma.users.create({\n      data,\n    });\n  }\n\n  async getUserById(id: number): Promise {\n    return this.prisma.users.findUnique({\n      where: { id_user: id },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return this.prisma.users.findMany();\n  }\n\n  async updateUser(id: number, data: Partial): Promise {\n    return this.prisma.users.update({\n      where: { id_user: id },\n      data,\n    });\n  }\n\n  async deleteUser(id: number): Promise {\n    return this.prisma.users.update({\n      where: { id_user: id },\n      data: { deleted_at: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/entities/permission.entity.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/modules/prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-users.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-users.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^6.0.1\n        \n            js-yaml : ^4.1.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (src/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/modules/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nPermissionsModule -->\n\nPrismaService->PermissionsModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../auth.controller.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            Public   (src/.../auth.controller.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (config/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret:\n    'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        YAML_CONFIG_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'config.yaml'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
